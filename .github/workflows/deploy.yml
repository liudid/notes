# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: 将 VitePress 站点部署到 Pages

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [main]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout（签出代码库）
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v2 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node（设置节点）
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm # 或 pnpm / yarn
      - name: Setup Pages（设置页面）
        uses: actions/configure-pages@v3
      - name: Install dependencies（安装依赖项）
        run: npm install # 或 pnpm install / yarn install / bun install
      - name: Build with VitePress（使用VitePress构建）
        run: npm run docs:build
      - name: Upload artifact（上传神器）
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/.vitepress/dist


  # 部署工作
  deploy:
    environment:
      name: github-pages（github页面）
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy（部署）
    steps:
      - name: Deploy to GitHub Pages（部署到github页面）
        id: deployment
        uses: actions/deploy-pages@v2